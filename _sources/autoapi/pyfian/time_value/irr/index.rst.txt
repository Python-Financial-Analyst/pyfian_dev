pyfian.time_value.irr
=====================

.. py:module:: pyfian.time_value.irr

.. autoapi-nested-parse::

   irr.py

   Module for computing the Internal Rate of Return (IRR) from a series of cash flows.



Functions
---------

.. autoapisummary::

   pyfian.time_value.irr.npv
   pyfian.time_value.irr.irr
   pyfian.time_value.irr.np_irr


Module Contents
---------------

.. py:function:: npv(rate: float, cash_flows: list[float]) -> float

   Compute the Net Present Value (NPV) for a series of cash flows.

   :param rate: Discount rate as a decimal (e.g., 0.1 for 10%).
   :type rate: float
   :param cash_flows: Cash flow values, where the index represents the time period.
   :type cash_flows: list of float

   :returns: Net present value of the cash flows.
   :rtype: float

   .. rubric:: Examples

   >>> npv(0.1, [-100, 50, 60])
   -4.95867768595


.. py:function:: irr(cash_flows: list[float], guess: float = 0.1, tol: float = 1e-06, max_iter: int = 1000) -> float

   Estimate the Internal Rate of Return (IRR) using the Newton-Raphson method.

   :param cash_flows: Cash flow values, where the index represents the time period.
   :type cash_flows: list of float
   :param guess: Initial guess for the IRR (default is 0.1, i.e. 10%).
   :type guess: float, optional
   :param tol: Tolerance for convergence (default is 1e-6).
   :type tol: float, optional
   :param max_iter: Maximum number of iterations (default is 1000).
   :type max_iter: int, optional

   :returns: Estimated internal rate of return as a decimal.
   :rtype: float

   :raises ValueError: If the IRR calculation does not converge.

   .. rubric:: Examples

   >>> irr([-1000, 300, 400, 500, 600])
   0.2488833566240709


.. py:function:: np_irr(cash_flows: list[float]) -> float

   Compute the Internal Rate of Return using numpy-financial's IRR function.

   :param cash_flows: Cash flow values, where the index represents the time period.
   :type cash_flows: list of float

   :returns: Internal Rate of Return as a decimal.
   :rtype: float

   .. rubric:: Examples

   >>> np_irr([-1000, 300, 400, 500, 600])
   0.2488833566240709


