pyfian.time_value.mortgage
==========================

.. py:module:: pyfian.time_value.mortgage


Functions
---------

.. autoapisummary::

   pyfian.time_value.mortgage.calculate_payment
   pyfian.time_value.mortgage.generate_amortization_schedule
   pyfian.time_value.mortgage.mortgage_cash_flows


Module Contents
---------------

.. py:function:: calculate_payment(principal: float, annual_rate: float, term_months: int, payment_interval_months: int = 1) -> float

   Calculate the fixed payment per payment period for a mortgage.

   This function computes the payment amount due each payment period given
   the principal, annual interest rate, total loan term in months, and the
   interval between payments in months.

   The formula used is:
   .. math::
       PMT = \frac{P \cdot r}{1 - (1 + r)^{-n}}
   where:
       - :math:`PMT` is the payment amount per period
       - :math:`P` is the principal loan amount
       - :math:`r` is the periodic interest rate. This is calculated as the annual rate
       divided by the number of payments per year.
       - :math:`n` is the total number of payments
   This function handles cases where the payment interval is not monthly,
   adjusting the interest rate and number of payments accordingly.

   :param principal: The original loan amount.
   :type principal: float
   :param annual_rate: The annual nominal interest rate as a decimal (e.g., 0.04 for 4%).
   :type annual_rate: float
   :param term_months: The total loan term expressed in months.
   :type term_months: int
   :param payment_interval_months: The number of months between payments (default is 1 for monthly payments).
                                   If None, defaults to 1 (monthly payments).
   :type payment_interval_months: int, optional

   :returns: The fixed payment amount due each payment period.
   :rtype: float

   :raises ValueError: If payment_interval_months is zero or negative, or if total_payments is zero.

   .. rubric:: Examples

   >>> calculate_payment(200000, 0.04, 360, 1)
   954.8305909309076

   >>> calculate_payment(100000, 0.05, 180, 3)
   2378.9930086358786


.. py:function:: generate_amortization_schedule(principal: float, annual_rate: float, term_months: int, payment_interval_months: int) -> pandas.DataFrame

   Generate the full amortization schedule as a pandas DataFrame.

   :param principal: The original loan amount.
   :type principal: float
   :param annual_rate: The annual nominal interest rate as a decimal.
   :type annual_rate: float
   :param term_months: The total loan term in months.
   :type term_months: int
   :param payment_interval_months: The number of months between payments.
   :type payment_interval_months: int

   :returns: A DataFrame containing columns: Period, Payment, Interest,
             Principal, Remaining Balance.
   :rtype: pd.DataFrame

   .. rubric:: Examples

   >>> df = generate_amortization_schedule(200000, 0.04, 360, 1)
   >>> df.head()
      Period  Payment  Interest  Principal  Remaining Balance
   0       1   954.83   666.67     288.16          199711.84
   1       2   954.83   665.71     289.12          199422.72


.. py:function:: mortgage_cash_flows(principal: float, annual_rate: float, term_months: int, payment_interval_months: int = 1) -> pandas.DataFrame

   Calculate mortgage cash flows (amortization schedule).

   This function generates a DataFrame containing the amortization schedule
   for a mortgage loan, including the payment amount, interest, principal,
   and remaining balance for each period.

   The schedule is generated using the `generate_amortization_schedule` function,
   which calculates the fixed payment per period and breaks down each payment
   into interest and principal components.

   :param principal: The loan principal amount.
   :type principal: float
   :param annual_rate: Annual nominal interest rate (decimal).
   :type annual_rate: float
   :param term_months: Loan term in months.
   :type term_months: int
   :param payment_interval_months: Months between payments (default is 1 = monthly, 3 = quarterly).
   :type payment_interval_months: int, optional

   :returns: Amortization schedule with Period, Payment, Interest,
             Principal, and Remaining Balance.
   :rtype: pd.DataFrame

   :raises ValueError: For invalid inputs such as negative principal, term, or payment interval.

   .. rubric:: Examples

   >>> df = mortgage_cash_flows(200000, 0.04, 11)
   >>> print(df)
      Period  Payment  Interest  Principal  Remaining Balance
   0       1   18182.95   666.67   17516.28           182483.72
   ...


